PROJECT CLASS

Fields:
private:
	string _name; //name of the project
	ushort _jobNumber; //job number [this will be part of the name]; Do I need to keep it as a separate variable??
	ulong _ID =0;  //unique ID to identify the project
	static Project[] projects = new Project[0]; //list of all projects
public:
	string note; //any note that the user may add 

Methods:
public:
	this( string name, ushort number=0, string notes ="", ulong id=0) //constructor; build a project object
	//name
	const string name()
	void changeName(const string name)
	//job number	
	const ushort jobNumber()
	void changeJobNumber( const ushort number) 
	//ID should be really carefull when changing ID
	const(ulong) ID() const 
	void changeID (ulong ID)
	//get list of projects
	static const(Project[]) getProjects() 
	

CATEGORY CLASS

Fields
private:
	string _Name; //name of the category
	string _Color; //color to represent the category
	ushort _Cost_Feriale; //costo per ora in centesimi
	ushort _Cost_Festivo; //costo per ora in centesimi
	static Category[] categories; //list of all categories
	static Category _NoneCategory;  //empty category used when user does not define a category

Methods
public:
	static Category NoneCategory() 
	static this () //initialise static members; no need to be called manually
	this(const string  name, const ushort feriale =0, const ushort  festivo =0, const string  color="black") 	
	//name
	const string name() 
	void changeName (const string name)
	//color
	const string color() 
	void changeColor(const string color)
	//costo feriale
	const ushort costoFeriale() 
	void changeCostoFeriale(const ushort costo)	
	//costo festivo
	const ushort costoFestivo() 
	void changeCostoFestivo(const ushort costo)
	//get list of categories
	static const(Category[]) getCategories()
	
SESSION CLASS

Fields:
private:
	string _dateTime; //start of the session
	string _duration = "00:00"; //hh:mm
	Category _category; //category of the session
	string _user; //user of the session
	ulong _projID; //project the session belongs to
public:
	string description; //user notes

Methods:
public:
	this(const ulong ID, const string user, const string description = "", Category category = Category.NoneCategory, const string date = "none") //if date is none; current date is picked
	//date of start
	const string dateTime() 
	void changeDateTime(string dateTime)
	//duration
	const string duration() 
	void changeDuration(string duration) 
	//category
	Category category() 
	void changeCategory (Category category) 
	//user session
	const string user() 
	void changeUser(const string user) //Only admin
	//project ID
	const ulong projectID() 
	void changeProjectID (ulong ID) 
	
TANTUM CLASS

inherit from session Tantum : Session 

Fields:
	private ushort _cost; //costo in centesimi

Methods:
public:
	this(const ulong ID, const string user, const ushort cost =0, bool tax = false, const string description ="", Category category = Category.NoneCategory, const string date = "none")
	override void changeDuration(string duration) //always throw exception since duration should stay at 00:00
	const ushort cost()
	void changeCost(const ushort cost) 
	
